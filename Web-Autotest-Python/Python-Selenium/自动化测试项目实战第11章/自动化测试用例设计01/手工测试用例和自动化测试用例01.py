# -*- coding:utf-8 -*-
# @Author         : 江湖一笑
# @Time           : 2019/7/1 7:04
# @Software       : PyCharm
# @Python_verison : 3.7
'''
对于测试人员来说，不管是功能测试、自动化测试、性能测试编写测试用例往往是至关重要的，
体现出测试人员的经验、能力以及对项目的需求的理解深度，接下来我们学习下自动化测试用例的一些特点，
以及如何编写自动化测试用例。

1、手工测试用例：
通过人手动去执行，具有较好的异常处理能力，能够基于测试用例，
制造各种不同的逻辑判断，而且人工测试步步跟踪，能够细致定位问题。
特点：
1、较好的异常处理能力，能够通过人为的逻辑判断校验当前步骤的功能是否实现正确。
2、人工执行用例具有一定的步骤跳跃性
3、人工测试步步跟踪，能够细致定位问题
4、主要用来发现功能bug



1、自动化测试用例；
完全按照测试用例的步骤执行，只能在已知步骤场景中发现问题，而且会因为网络问题，微小的页面ui改动，而导致用例执行失败，
自动化测试很难发现新的bug。
特点：
1、执行对象是脚本，任何一个判断都需要编码定义
2、用例步骤之间关联性强
3、主要用例测试产品主体功能，让测试人员解脱于繁琐重复的工作
4、目前自动化测试定位在冒烟测试和回归测试

通过对比我们发现，手工测试用例与自动化测试用例之间存在较大的差异，所以不能直接把手工测试用例翻译成自动化测试用例。

3、自动化测试用例选型注意事项
1、不是所有的手工用例都要转化为自动化测试用例
2、考虑到脚本开发的成本，不要选择流程太复杂的用例，如果有必要可以把流程拆分成多个用例用脚本来实现。
3、选择的用例最好可以构建成场景，例如：一个功能模块，分多个用例，多个用例使用同一个场景，这样的好处在于方便构建关键字测试模型。
4、选择的用例可以带有目的性，例如，这部分用例用于冒烟测试，这部分用于回归测试等等。
5、选取的测试用例可以是你认为重复执行，很繁琐的部分，例如，字段验证，提示信息验证这类，这部分用于回归测试。
6、选取的用例可以是主流程，这部分适用于冒烟测试。
7、自动化测试用例也可以用来做配置检查，数据库检查，
8、平时在手工测试时，如果需要构造一些复杂的数据或重复度的一些简单的机械动作则可以告诉自动化脚本，
让他来帮你获取你得效率会因此而得到提高。

'''